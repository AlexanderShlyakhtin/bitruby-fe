openapi: 3.0.3
info:
  title: BitRuby auth service
  description: Swagger for auth service
  version: 1.0.0
servers:
  - url: /auth/api/v1
    description: The URL prefix for API server
tags:
  - name: auth

paths:
  /oauth2/introspect:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Introspect token access token
      operationId: introspectAccessToken
      tags:
        - auth
      security:
        - basicAuth: []
      requestBody:
        $ref: '#/components/requestBodies/IntrospectTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/IntrospectTokenResponse'
        '4XX':
          $ref: '#/components/responses/Error'
        '5XX':
          $ref: '#/components/responses/Error'
  /oauth2/token:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Get access and refresh token by user password
      operationId: getTokenByUserPassword
      tags:
        - auth
      security:
        - basicAuth: []
      requestBody:
        $ref: '#/components/requestBodies/TokenRequest'
      parameters:
        - $ref: '#/components/parameters/GrantType'
        - $ref: '#/components/parameters/RefreshToken'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '4XX':
          $ref: '#/components/responses/Error'
        '5XX':
          $ref: '#/components/responses/Error'
  /oauth2/otp:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Generate and send OTP code for login
      operationId: generateOtpCodeForLogin
      security:
        - basicAuth: []
      tags:
        - auth
      requestBody:
        $ref: '#/components/requestBodies/OtpLoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/OtpLoginResponse'
components:
  parameters:
    RequestId:
      name: x-request-id
      in: header
      required: true
      schema:
        type: string
        format: uuid
    GrantType:
      name: grant_type
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/GrantType'
    RefreshToken:
      name: refresh_token
      in: query
      required: false
      schema:
        type: string
  responses:
    Error:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OtpLoginResponse:
      description: error
      headers:
        x-request-id:
          required: true
          description: >-
            Сквозной идентификатор запроса
          schema:
            type: string
            format: uuid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpLoginResult'
    TokenResponse:
      description: >-
        Token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token'
    IntrospectTokenResponse:
      description: >-
        Token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IntrospectToken'
  requestBodies:
    OtpLoginRequest:
      description: >-
        Generate OTP token for user login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpLogin'
    IntrospectTokenRequest:
      description: >-
        Get token by grant type and password
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string

    TokenRequest:
      description: >-
        Get token by grant type and password
      content:
        multipart/form-data:
          schema:
            oneOf:
              - type: object
                required:
                  - grant_type
                  - refresh_token
                properties:
                  grant_type:
                    $ref: '#/components/schemas/GrantType'
                  refresh_token:
                    type: string
              - type: object
                required:
                  - grant_type
                  - username
                  - password
                  - scope
                  - otp
                  - loginId
                properties:
                  grant_type:
                    $ref: '#/components/schemas/GrantType'
                  username:
                    type: string
                  password:
                    type: string
                    format: password
                  scope:
                    type: string
                  otp:
                    type: string
                  loginId:
                    type: string
                    format: uuid
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Use `user` / `passwd` as the test credentials

  schemas:
    Id:
      type: string
      format: uuid
    Base:
      type: object
      required:
        - success
        - timestamp
      properties:
        success:
          type: boolean
          description: >-
            Влад сказал, что параметр обязательный для сервисов на ГО
        timestamp:
          type: string
          format: date-time
          description: >-
            Время отправки ответа на запрос
    Error:
      type: object
      properties:
        code:
          type: string
          description: code of error
          example: "10"
        message:
          type: string
          description: code of error
          example: Text about reaosn of error
        payload:
          type: array
          items:
            type: string
            description: description
            example: example
    GrantType:
      type: string
      enum:
        - email_password
        - phone_password
        - refresh_token
      default: phone_password
    Token:
      type: object
      required:
        - access_token
        - refresh_token
        - token_type
        - expires_in
      additionalProperties: true
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
    IntrospectToken:
      type: object
      required:
        - active
      additionalProperties: true
      properties:
        active:
          type: boolean
    OtpCode:
      type: object
      required:
        - grant_type
        - sendTo
      properties:
        grant_type:
          $ref: '#/components/schemas/GrantType'
        sendTo:
          type: string
          nullable: false
    OtpLogin:
      allOf:
        - $ref: '#/components/schemas/OtpCode'
        - type: object
          required:
            - password
          properties:
            password:
              type: string
              format: password
    OtpLoginResult:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - loginId
          properties:
            loginId:
              $ref: '#/components/schemas/Id'
