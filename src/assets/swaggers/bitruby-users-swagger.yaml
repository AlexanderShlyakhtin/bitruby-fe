openapi: 3.0.3
info:
  title: BitRuby users service
  description: Swagger for users service
  version: 1.0.0
servers:
  - url: /api/v1
    description: The URL prefix for API server
tags:
  - name: users
  - name: otp-registration
  - name: otp-restore-password
  - name: otp-login

paths:
  /public/registration:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Register new user
      operationId: registerUser
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/RegisterNewUserRequest'
      responses:
        '201':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /public/registration/complete-registration:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Complete registration of new user
      description: >-
        Complete registration of the user by email confirmation
      requestBody:
        $ref: '#/components/requestBodies/CheckOtpCodeRequest'
      operationId: completeRegistration
      tags:
        - users
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

  /public/restore-password:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Restore forgotten password
      description: >-
        Restore forgotten password
      requestBody:
        $ref: '#/components/requestBodies/RestorePasswordRequest'
      operationId: restorePassword
      tags:
        - users
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /secured/verification/form:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Apply user form
      description: >-
        Apply user form
      requestBody:
        $ref: '#/components/requestBodies/UserFormRequest'
      operationId: applyUserForm
      tags:
        - users
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /secured/verification:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    get:
      summary: Get user verification data
      description: >-
        Get user verification data
      operationId: getUserVerificationData
      tags:
        - users
      responses:
        '200':
          $ref: '#/components/responses/UserVerificationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /public/generate-otp/login:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Generate and send OTP code for login
      operationId: generateOtpCodeForLogin
      tags:
        - otp-login
      requestBody:
        $ref: '#/components/requestBodies/GenerateOtpCodeLoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /public/generate-otp/registration:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Generate and send OTP code for Registration
      operationId: generateOtpCodeForRegistration
      tags:
        - otp-registration
      requestBody:
        $ref: '#/components/requestBodies/GenerateOtpCodeRegistrationRequest'
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /public/generate-otp/restore-password:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Generate and send OTP code for Restoring the password
      operationId: generateOtpCodeForRestoringPassword
      tags:
        - otp-restore-password
      requestBody:
        $ref: '#/components/requestBodies/GenerateOtpCodeRestorePasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /public/generate-otp/restore-password/check:
    parameters:
      - $ref: '#/components/parameters/RequestId'
    post:
      summary: Check generatred OTP code to Restore user the password
      operationId: checkOtpCodeForRestoringPassword
      tags:
        - otp-restore-password
      requestBody:
        $ref: '#/components/requestBodies/CheckOtpCodeRestorePasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    UserVerificationResponse:
      description: error
      headers:
        x-request-id:
          required: true
          description: >-
            Сквозной идентификатор запроса
          schema:
            type: string
            format: uuid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserVerification'
    InternalServerError:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequestError:
      description: error
      headers:
        x-request-id:
          required: true
          description: >-
            Сквозной идентификатор запроса
          schema:
            type: string
            format: uuid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    EmptyResponse:
      headers:
        x-request-id:
          required: true
          description: >-
            Сквозной идентификатор запроса
          schema:
            type: string
            format: uuid
      description: >-
        response with no body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Base'

  requestBodies:
    UserFormRequest:
      description: >-
        Generate OTP token for user login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserForm'
    GenerateOtpCodeLoginRequest:
      description: >-
        Generate OTP token for user login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCodeLogin'
    GenerateOtpCodeRegistrationRequest:
      description: >-
        Generate OTP token for user registration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCode'
    GenerateOtpCodeRestorePasswordRequest:
      description: >-
        Generate OTP token for restoring the password
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCode'
    CheckOtpCodeRestorePasswordRequest:
      description: >-
        Check OTP token for restoring the password
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCodeRestorePassword'
    RestorePasswordRequest:
      description: >-
        Restore user password
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RestorePassword'
    CheckOtpCodeRequest:
      description: >-
        Generate OTP token for user login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCodeCheck'
    RegisterNewUserRequest:
      description: >-
        Registration body of new user"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewUser'
  parameters:
    RequestId:
      name: x-request-id
      in: header
      required: true
      schema:
        type: string
        format: uuid
    UserId:
      name: user-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    Token:
      name: token
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Otp'



  schemas:

    Id:
      type: string
      format: uuid
    Base:
      type: object
      required:
        - success
        - timestamp
      properties:
        success:
          type: boolean
          description: >-
            Влад сказал, что параметр обязательный для сервисов на ГО
        timestamp:
          type: string
          format: date-time
          description: >-
            Время отправки ответа на запрос

    Otp:
      type: string
      maxLength: 6
      minLength: 6
    Error:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - code
            - message
            - payload
          properties:
            code:
              type: string
              description: code of error
              example: "10"
            message:
              type: string
              description: code of error
              example: Text about reaosn of error
            payload:
              type: array
              items:
                type: string
                description: description
                example: example
    GrantType:
      type: string
      enum:
        - email_password
        - phone_password

    RoleType:
      type: string
      enum:
        - USER
        - DEVELOPER
        - ADMIN

    NewUser:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    VerificationStatus:
      type: string
      enum:
        - waiting_for_start
        - started
        - waiting_for_review
        - waiting_for_resubmission
        - flow_finished_success
        - flow_finished_rejected
        - flow_finished_error
      description: >
        Enum representing various verification statuses:
        - WAITING_FOR_START: waiting_for_start
        - STARTED: started
        - WAITING_FOR_REVIEW: waiting_for_review
        - WAITING_FOR_RESUBMISSION: waiting_for_resubmission
        - SUCCESS: flow_finished_success
        - REJECTED: flow_finished_rejected
        - ERROR: flow_finished_error
    UserVerification:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          required:
            - user
            - verificationSession
          properties:
            user:
              $ref: '#/components/schemas/UserForm'
            verificationSession:
              type: object
              nullable: true
              required:
                - url
                - status
              properties:
                url:
                  type: string
                status:
                  $ref: '#/components/schemas/VerificationStatus'
    UserForm:
      type: object
      required:
        - firstName
        - lastName
        - address
      properties:
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: string
    User:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        merchant:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleType'
        isEnabled:
          type: boolean
        isRegistrationComplete:
          type: boolean
        isAccountNonLocked:
          type: boolean
        isCredentialsNonExpired:
          type: boolean

    OtpCodeCheck:
      allOf:
        - type: object
          required:
            - otp
          properties:
            otp:
              $ref: '#/components/schemas/Otp'
        - $ref: '#/components/schemas/OtpCode'

    OtpCodeLogin:
      allOf:
        - $ref: '#/components/schemas/OtpCode'
        - type: object
          required:
            - password
          properties:
            password:
              type: string
              format: password
    RestorePassword:
      allOf:
        - $ref: '#/components/schemas/OtpCode'
        - type: object
          required:
            - otp
            - password
          properties:
            otp:
              $ref: '#/components/schemas/Otp'
            password:
              type: string
              format: password

    OtpCodeRestorePassword:
      allOf:
        - $ref: '#/components/schemas/OtpCode'
        - type: object
          required:
            - otp
          properties:
            otp:
              $ref: '#/components/schemas/Otp'
    OtpCode:
      type: object
      required:
        - grant_type
        - sendTo
      properties:
        grant_type:
          $ref: '#/components/schemas/GrantType'
        sendTo:
          type: string
          nullable: false
