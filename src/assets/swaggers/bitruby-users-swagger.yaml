openapi: 3.0.3
info:
  title: BitRuby users service
  description: Swagger for users service
  version: 1.0.0
servers:
  - url: /api/v1
    description: The URL prefix for API server
tags:
  - name: users

paths:
  /public/registration:
    post:
      summary: Register new user
      operationId: registerUser
      tags:
        - users
      security: []
      requestBody:
        $ref: '#/components/requestBodies/RegisterNewUserRequest'
      responses:
        '201':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/Error'
  /public/registration/complete-registration:
    post:
      summary: Complete registration of new user
      description: >-
        Complete registration of the user by email confirmation
      requestBody:
        $ref: '#/components/requestBodies/CheckOtpCodeRequest'
      operationId: completeRegistration
      tags:
        - users
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/Error'
  /public/generate-otp/login:
    post:
      summary: Generate and send OTP code for login
      operationId: generateOtpCodeForLogin
      tags:
        - otp
      requestBody:
        $ref: '#/components/requestBodies/GenerateOtpCodeLoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
  /public/generate-otp/registration:
    post:
      summary: Generate and send OTP code for Registration
      operationId: generateOtpCodeForRegistration
      tags:
        - otp
      requestBody:
        $ref: '#/components/requestBodies/GenerateOtpCodeRegistrationRequest'
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
components:
  responses:
    Error:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    EmptyResponse:
      description: >-
        response with no body

  requestBodies:
    GenerateOtpCodeLoginRequest:
      description: >-
        Generate OTP token for user login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCodeLogin'
    GenerateOtpCodeRegistrationRequest:
      description: >-
        Generate OTP token for user registration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCode'
    CheckOtpCodeRequest:
      description: >-
        Generate OTP token for user login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OtpCodeCheck'
    RegisterNewUserRequest:
      description: >-
        Registration body of new user"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisterUser'
  parameters:
    Token:
      name: token
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Otp'

  schemas:

    Id:
      type: string
      format: uuid
    Otp:
      type: string
      maxLength: 6
      minLength: 6
    Error:
      type: object
      properties:
        code:
          type: string
          description: code of error
          example: "10"
        message:
          type: string
          description: code of error
          example: Text about reaosn of error
        payload:
          type: array
          items:
            type: string
            description: description
            example: example
    GrantType:
      type: string
      enum:
        - email_password
        - phone_password

    RoleType:
      type: string
      enum:
        - USER
        - DEVELOPER
        - ADMIN

    RegisterUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    User:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        merchant:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/RoleType'
        isEnabled:
          type: boolean
        isRegistrationComplete:
          type: boolean
        isAccountNonLocked:
          type: boolean
        isCredentialsNonExpired:
          type: boolean

    OtpCodeCheck:
      allOf:
        - type: object
          required:
            - otp
          properties:
            otp:
              $ref: '#/components/schemas/Otp'
        - $ref: '#/components/schemas/OtpCode'

    OtpCodeLogin:
      allOf:

        - $ref: '#/components/schemas/OtpCode'
        - type: object
          required:
            - password
          properties:
            password:
              type: string
              format: password

    OtpCode:
      type: object
      required:
        - grant_type
        - sendTo
      properties:
        grant_type:
          $ref: '#/components/schemas/GrantType'
        sendTo:
          type: string
          nullable: false
